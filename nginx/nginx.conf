# Set to number of cores for best performance
worker_processes 1;

events {
  # Usually corresponds to number of concurrent requests
  worker_connections 1024;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay off;
  types_hash_max_size 2048;
  server_tokens off;

  # Timeout settings, for performance
  client_body_timeout 15;
  client_header_timeout 15;
  keepalive_timeout 20;
  send_timeout 10;

  # Tweaking buffer sizes for max performance
  client_body_buffer_size 10K;
  client_header_buffer_size 1k;
  client_max_body_size 8m;
  large_client_header_buffers 4 16k;

  # Log format optimized for AWS
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
       '$status $body_bytes_sent "$http_referer" '
       '"$http_user_agent" "$http_x_forwarded_for"';

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  error_log /var/log/nginx/error.log;

  # Logs location
  access_log /var/log/nginx/access.log main;

  # GZIP Compression settings
  gzip on;
  gzip_disable "msie6";
  gzip_comp_level 6;
  gzip_vary on;
  gzip_min_length  500;
  gzip_proxied any;
  gzip_types
    text/plain
    text/css
    text/js
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    image/svg+xml;
  gzip_buffers 16 8k;

  # Brotli settings
  brotli on;
  brotli_comp_level 4;
  brotli_static on;
  brotli_types *;

  server {
    listen 0.0.0.0;

    # The root for NGINX is the data-container build folder to serve static content from
    root /client/build/;

    # Caching behavior
    location ~* \.(?:html?|xml|json)$ {
      expires -1;
    }

    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
      expires 1M;
      access_log off;
      add_header Cache-Control "public";
    }

    # All requests starting with /api will be routed to the backend Node.js instance
    location /api {
      proxy_buffers 16 4k;
      proxy_buffer_size 2k;
      proxy_pass http://backend_api;
    }

    # Try to get any static file from the root folder
    location / {
      proxy_buffers 16 4k;
      proxy_buffer_size 2k;
      proxy_pass http://backend_api;
    }
  }

  # NGinx is the frontend server, and API is the backend
  upstream backend_api {
     server server:8099 fail_timeout=0;
  }

  # Security Headers to be added to every req/res for quick security wins
  add_header Strict-Transport-Security "max-age=315360000;includeSubDomains;";
  add_header X-Frame-Options "DENY";
  add_header X-Content-Type-Options "nosniff";
  add_header X-XSS-Protection "1; mode=block";

  # Prevent crawling
  add_header  X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
}
